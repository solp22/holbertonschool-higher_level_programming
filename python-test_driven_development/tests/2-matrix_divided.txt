The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is test for the matrix_divided function. First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
Now use it:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1, 2, 3], [4, 5]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided(None)
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'holaa')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2.5)
    [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('NaN'))
    [[nan, nan, nan], [nan, nan, nan]]

    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
