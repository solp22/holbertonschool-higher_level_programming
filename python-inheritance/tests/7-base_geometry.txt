The ``7-base_geometry`` module
======================

Using ``integer_validator``
-------------------

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Jhon", 89)

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Jhon", -89)
    Traceback (most recent call last):
    ...
    ValueError: Jhon must be greater than 0

    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Jhon", 0)
    Traceback (most recent call last):
    ...
    ValueError: Jhon must be greater than 0

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("Jhon", "hi")
    Traceback (most recent call last):
    ...
    TypeError: Jhon must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    ...
    TypeError: age must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("height", [23])
    Traceback (most recent call last):
    TypeError: height must be an integer

    >>> bg.integer_validator("height", (4,))
    Traceback (most recent call last):
    ...
    TypeError: height must be an integer

    >>> bg.integer_validator("width", {3, 2})
    Traceback (most recent call last):
    ...
    TypeError: width must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", False)
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator(None)
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'